#!/bin/bash
#
# Myna Main instance Control Script
#

#Make sure that the webroot owner matches this
user="root"
server="watchdog"
context="/"
#set this to 0 to disable http
port=0

webroot="/home/mark/watchdog/build"
logfile="/home/mark/watchdog/dev.log"
mem=256
ps_signature="java.*myna.name=$server"
#export JAVA_HOME="{javahome}"
#export JRE_HOME=/usr/java/default/jre/
web_inf=$(readlink -m $webroot/WEB-INF)

#SSL
#set this to something non-zero to enable https
ssl_port=2815



myna_cp="-cp $web_inf/lib/*:$web_inf/classes/:/usr/local/bin"

#	watchdog_jvm_args
watchdog_jvm_args="\
	-Dmyna.name=$server \
	-Xmx20m \
	-server \
	$myna_cp "

#	server_jvm_args	
server_jvm_args="\
	-Djava.security.egd=file:/dev/./urandom \
	-Dmyna.name=$server \
	-Xmx${mem}m \
	-server "


#	no_watchdog_args	
no_watchdog_args="\
	$myna_cp\
	-Dmyna.hasWatchdog=true"

#	myna_args	
myna_args="\
	-m server \
	-c $context \
	-p $port \
	-sp $ssl_port \
	-w $webroot \
	-l $logfile "


case "$1" in
start)
	sudo java $watchdog_jvm_args  info.emptybrain.myna.MynaServer $myna_args -- $server_jvm_args&
	echo "$server' Starting. tail -f $logfile for details."
	
	exit 0
    ;;
start-nowatchdog)
	sudo java  $no_watchdog_args $server_jvm_args info.emptybrain.myna.MynaServer $myna_args&
	echo "'$server' Starting. tail -f $logfile for details."
	
	exit 0
    ;;
stop)
	$0 status > /dev/null
	if [ $? -eq 0 ];then
		ps -ef | grep "$ps_signature" | grep -v grep  | awk '{print $2}' | xargs kill  &> /dev/null
		sleep 2
		$0 status > /dev/null
		if [ $? -eq 0 ];then
			sudo ps -ef | grep "$ps_signature" | grep -v grep  | awk '{print $2}' | xargs kill -9  &> /dev/null
		fi
		echo "'$server' stopped."
	else
		echo "'$server' is not running."
	fi
	
    ;;
compile)
	$0 stop
	echo "" > $logfile
	ant compile && sudo -H $0 start && tail -f $logfile
	;;
restart)
   $0 stop
	sleep 1
	$0 start
    ;;
status)
	echo -n \"$server\":
	ps -ef | grep "$ps_signature" | grep -v grep > /dev/null 
	if [ $? -eq 0 ];then
		echo " Running."
		exit 0
	else
		echo " Stopped."
		exit 1
	fi
   
    ;;
*)
    echo "usage: $0 (start|stop|restart|status)"
esac


